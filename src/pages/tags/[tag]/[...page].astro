---
import type { Page, GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import RootLayout from "@/layouts/RootLayout";
import PostPreview from "@/components/PostPreview";
import Pagination from "@/components/Paginator";
import { getUniqueTags, sortPostsByDate } from "@/utils/helpers";
import type { siteMeta } from "src/types";

export const getStaticPaths = (async ({ paginate }) => {
	const allPosts = await getCollection("post");
	const allPostsByDate = sortPostsByDate(allPosts);
	const uniqueTags = getUniqueTags(allPostsByDate);

	return uniqueTags.flatMap((tag) => {
		const filterPosts = allPostsByDate.filter((post) => post.data.tags?.includes(tag));
		return paginate(filterPosts, {
			params: { tag },
			pageSize: 10,
		});
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"post">>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const meta: siteMeta = {
	title: `Tag: ${tag}`,
	description: `View all posts with the tag - ${tag}`,
	ogImage: null,
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			url: page.url.prev,
			text: `← Previous Tags`,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			url: page.url.next,
			text: `Next Tags →`,
		},
	}),
};
---

<RootLayout meta={meta}>
	<h1 class="title mb-6 flex items-end">
		<a href="/tags/" class="text-accent leading-none sm:hover:underline text-2xl">Tags</a>
		<span class="me-3 ms-2"
			><svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				class="w-6 h-6"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					d="M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3"></path>
			</svg>
		</span>
		<span class="text-xl leading-none">#{tag}</span>
	</h1>
	<section aria-label="Blog post list">
		<ul class="space-y-8">
			{
				page.data.map((p) => (
					<li class="flex flex-col flex-wrap gap-2 sm:flex-row [&_q]:basis-full">
						<PostPreview post={p} withDesc />
					</li>
				))
			}
		</ul>
		<Pagination {...paginationProps} />
	</section>
</RootLayout>
