---
import { Image } from "astro:assets";
import myProfile from "../../assets/profile.jpg";
---

<div class="max-w-xs md:max-w-4xl mx-auto md:m-0">
	<Image id="profile" quality="high" src={myProfile} alt="profile pic" class="profile aspect-square transition-all border-[3px] border-textColor dark:border-gray-400" />
</div>

<style>
	.profile {
		filter: grayscale(1);
		border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
		transition: all 2s ease-in-out;
	}

	.profile-animate {
		animation: morph 5s ease-in-out infinite;
		/* animation-fill-mode: forwards; */
	}

	@keyframes morph {
		0% {
			border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
			/* border-radius: var(--first-border-radius); */
		}

		50% {
			border-radius: 30% 60% 70% 40%/50% 60% 30% 60%;
			/* border-radius: var(--second-border-radius); */
		}

		100% {
			border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
			/* border-radius: var(--first-border-radius); */
		}
	}
</style>
<script>
	import { wait } from "@/utils/helpers";

	const profilePic = document.getElementById("profile");

	let firstTime = true;
	if (profilePic) {
		document.documentElement.addEventListener("show-stars", async () => {
			// wait for two second that border radius get back to its first postions
			// two second because when we add animation class suddenly it does not jump back
			// - to keyframe 0 position and does it smoothly
			// first time is for when we add animation for the first time it does not need
			// to wait for two second
			if (!profilePic.classList.contains("profile-animate") && !firstTime) {
				profilePic.style.removeProperty("border-radius");
				await wait(2);
			}
			firstTime = false;
			const borderRadius = window.getComputedStyle(profilePic).borderRadius;
			profilePic.style.borderRadius = borderRadius;
			profilePic.classList.toggle("profile-animate");
		});
	}
</script>
